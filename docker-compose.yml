version: "3.8"

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - task-network
    restart: unless-stopped
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      DB_HOST: db
      DB_USER: postgres
      DB_NAME: task_management
      DB_PASSWORD_FILE: /run/secrets/db_password
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      AUTH_SERVICE_URL: http://auth-service:5001
    secrets:
      - db_password
      - jwt_secret
    depends_on:
      db:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - task-network
    restart: unless-stopped
    read_only: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: task_management
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - task-network
    expose:
      - "5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d task_management"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  auth-service:
    build: ./auth-service
    ports:
      - "5001:5001"
    environment:
      NODE_ENV: development
      AUTH_DB_HOST: auth-db
      AUTH_DB_USER: auth_user
      AUTH_DB_NAME: auth_service
      AUTH_DB_PASSWORD_FILE: /run/secrets/auth_db_password
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      JWT_EXPIRES_IN: 1h
    secrets:
      - auth_db_password
      - jwt_secret
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - task-network
    restart: unless-stopped
    read_only: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  auth-db:
    image: postgres:14
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_DB: auth_service
      POSTGRES_PASSWORD_FILE: /run/secrets/auth_db_password
    secrets:
      - auth_db_password
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - task-network
    expose:
      - "5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_service"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  notification-service:
    build: ./notification-service
    depends_on:
      db:
        condition: service_healthy
      auth-db:
        condition: service_healthy
      mailhog:
        condition: service_started
    environment:
      DB_HOST: db
      DB_USER: postgres
      DB_NAME: task_management
      DB_PASSWORD_FILE: /run/secrets/db_password
      AUTH_DB_HOST: auth-db
      AUTH_DB_USER: auth_user
      AUTH_DB_NAME: auth_service
      AUTH_DB_PASSWORD_FILE: /run/secrets/auth_db_password
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    secrets:
      - db_password
      - auth_db_password
    networks:
      - task-network
    restart: unless-stopped
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - task-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  auth_postgres_data:

secrets:
  db_password:
    file: ./secrets/db_password.txt
  auth_db_password:
    file: ./secrets/auth_db_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt

networks:
  task-network:
    driver: bridge